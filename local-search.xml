<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>从零开始实现一个mini reactDnd 👉</title>
    <link href="/2022/04/16/reactDnd/"/>
    <url>/2022/04/16/reactDnd/</url>
    
    <content type="html"><![CDATA[<p><img src="/2022/04/16/reactDnd/redpanda.jpg"></p><p>先一个《青春变形记》海报镇楼，强烈推荐🌟🌟🌟🌟🌟<br>最近项目中使用react-dnd，出现了一些警告bug，为了弄清警告来源，开始研究react-dnd源码，发现作者的思路简直神级，想和大家分享一下～</p><h2 id="react-dnd设计思路"><a href="#react-dnd设计思路" class="headerlink" title="react-dnd设计思路"></a>react-dnd设计思路</h2><p><img src="/2022/04/16/reactDnd/step1.png"><br><img src="/2022/04/16/reactDnd/step2.png"><br><img src="/2022/04/16/reactDnd/step3.png"><br>就此 整个拖拽过程，就形成了一个正常工作链，这是不是就结束了呢？？<br>进行思考🤔<br>虽然 员工 AA 干活我们是知道的， 毕竟这是在HTML中，拖拽都是通过DOM节点去工作的，<br>怎么能将 员工AA 一个class类  和 DOM拖拽功能结合呢<br><img src="/2022/04/16/reactDnd/step4.png"><br>通过以上，就是整个react-dnd的设计思想了，有没有很巧妙呢</p><h2 id="开始实现"><a href="#开始实现" class="headerlink" title="开始实现"></a>开始实现</h2><h3 id="Step1-实现DndProvider和manager和backend连接"><a href="#Step1-实现DndProvider和manager和backend连接" class="headerlink" title="Step1 实现DndProvider和manager和backend连接"></a>Step1 实现DndProvider和manager和backend连接</h3><p>主要负责<br><img src="/2022/04/16/reactDnd/step5.png"></p><h4 id="1、首先先下载初始化文件"><a href="#1、首先先下载初始化文件" class="headerlink" title="1、首先先下载初始化文件"></a>1、首先先下载初始化文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/beewolf233/mini-reactdnd/tree/dev_init<br>npm install<br>npm run start<br></code></pre></td></tr></table></figure><h4 id="2、在src文件夹创建三个文件夹"><a href="#2、在src文件夹创建三个文件夹" class="headerlink" title="2、在src文件夹创建三个文件夹"></a>2、在src文件夹创建三个文件夹</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">dnd-core<br>react-dnd<br>react-dnd-html5-backend<br></code></pre></td></tr></table></figure><p>dnd-core 主要负责 manager 总经理角色<br>react-dnd 中 主要负责 reactDnd， useDrag, useDrop 功能实现<br>react-dnd-html5-backend 主要负责DOM后台</p><h4 id="3、react-dnd中创建core文件"><a href="#3、react-dnd中创建core文件" class="headerlink" title="3、react-dnd中创建core文件"></a>3、react-dnd中创建core文件</h4><p>core文件可以通过react的createContext，创建上下文<br><img src="/2022/04/16/reactDnd/example1.png"><br>core/DndContext</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; createContext &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">DndContext</span> = <span class="hljs-title function_">createContext</span>(&#123; <span class="hljs-attr">dragDropManager</span>: <span class="hljs-literal">undefined</span> &#125;);<br></code></pre></td></tr></table></figure><p>core/DndProvider</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">DndContext</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./DndContext&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; createDragDropManager &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../dnd-core&#x27;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">DndProvider</span> = (<span class="hljs-params">&#123; children, backend &#125;</span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> value = &#123; <span class="hljs-attr">dragDropManager</span>: <span class="hljs-title function_">createDragDropManager</span>(backend)&#125;;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">DndContext.Provider</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#123;value&#125;</span>&gt;</span></span><br><span class="language-xml">      &#123;children&#125;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">DndContext.Provider</span>&gt;</span></span><br>  )<br>&#125;;<br></code></pre></td></tr></table></figure><p>core/index</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> * <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./DndContext&#x27;</span><br><span class="hljs-keyword">export</span> * <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./DndProvider&#x27;</span><br></code></pre></td></tr></table></figure><p>index</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> * <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./core&#x27;</span>;<br></code></pre></td></tr></table></figure><h4 id="4、dnd-core创建manager，透出createDragDropManager"><a href="#4、dnd-core创建manager，透出createDragDropManager" class="headerlink" title="4、dnd-core创建manager，透出createDragDropManager"></a>4、dnd-core创建manager，透出createDragDropManager</h4><p>createDragDropManager</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; createStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;redux&#x27;</span><br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">DragDropManagerImpl</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./classes/DragDropManagerImpl&#x27;</span><br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">DragDropMonitorImpl</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./classes/DragDropMonitorImpl&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">HandlerRegistryImpl</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./classes/HandlerRegistryImpl&#x27;</span>;<br><span class="hljs-keyword">import</span> reduce <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./reducers/index&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">createDragDropManager</span> = (<span class="hljs-params"></span><br><span class="hljs-params">  backendFactory</span><br><span class="hljs-params"></span>)=&gt; &#123;<br>  <span class="hljs-comment">// 创建store</span><br>  <span class="hljs-keyword">const</span> store = <span class="hljs-title function_">createStore</span>(reduce);<br>  <span class="hljs-comment">// 创建注册类</span><br>  <span class="hljs-keyword">const</span> registry = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HandlerRegistryImpl</span>(store);<br>  <span class="hljs-comment">// 注册类注入到监听器中，创建监听器 人事</span><br>  <span class="hljs-keyword">const</span> monitor = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DragDropMonitorImpl</span>(store, registry);<br>  <span class="hljs-comment">// 创建manager 总经理</span><br>  <span class="hljs-keyword">const</span> manager = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DragDropManagerImpl</span>(store, monitor);<br>  <span class="hljs-comment">// 传入后台，一方面manager通过backendFactory注入到backend</span><br>  <span class="hljs-keyword">const</span> backend = <span class="hljs-title function_">backendFactory</span>(manager);<br>  <span class="hljs-comment">// 另一方面 backend实例也注入到manager中</span><br>  manager.<span class="hljs-title function_">receiveBackend</span>(backend)<br>  <span class="hljs-keyword">return</span> manager;<br>&#125;;<br><br></code></pre></td></tr></table></figure><p>index</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> * <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./createDragDropManager&#x27;</span>;<br></code></pre></td></tr></table></figure><h4 id="5、react-dnd-html5-backend中创建backend"><a href="#5、react-dnd-html5-backend中创建backend" class="headerlink" title="5、react-dnd-html5-backend中创建backend"></a>5、react-dnd-html5-backend中创建backend</h4><p>HTML5BackendImpl</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HTML5BackendImpl</span> &#123;<br>  manager<br>  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">manager</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">manager</span> = manager<br>  &#125;;<br>&#125;;<br></code></pre></td></tr></table></figure><p>index</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">HTML5BackendImpl</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./HTML5BackendImpl&#x27;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">HTML5Backend</span>(<span class="hljs-params">manager</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HTML5BackendImpl</span>(manager);<br>&#125;;<br><br></code></pre></td></tr></table></figure><h4 id="6、App-js"><a href="#6、App-js" class="headerlink" title="6、App.js"></a>6、App.js</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">HTML5Backend</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./react-dnd-html5-backend&#x27;</span><br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">DndProvider</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./react-dnd&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Container</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./SimpleCard&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./App.css&#x27;</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;App&quot;</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">DndProvider</span> <span class="hljs-attr">backend</span>=<span class="hljs-string">&#123;HTML5Backend&#125;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Container</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">DndProvider</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">App</span>;<br></code></pre></td></tr></table></figure><p><img src="/2022/04/16/reactDnd/step6.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://github.com/beewolf233/mini-reactdnd/commit/1e0f0b454a924db8869ffd2ac4646b79abfe7c93<br></code></pre></td></tr></table></figure><p>通过以上commit获取本步骤代码⬆️</p><p>接下来的Step请看第二篇文章</p>]]></content>
    
    
    
    <tags>
      
      <tag>mini-react-dnd</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
